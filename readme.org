#+TITLE: CPP Extractor
#+AUTHOR: RJ Sheperd

** Setup

*** Download Repo
#+BEGIN_SRC bash
  git clone https://github.com/rjsheperd/cpp-extractor.git
  git submodule init --update --recursive
#+END_SRC

*** Install Requirements

**** With NIX
https://nixos.org/download.html

**** With [[https://docs.conda.io/en/latest/miniconda.html][Conda]]:
#+BEGIN_SRC bash
  conda env create -f environment.yml
  conda activate
#+END_SRC

**** With pip:
#+BEGIN_SRC bash
  pip install -r requirements.txt
#+END_SRC

** Run

**** With NIX
#+BEGIN_SRC bash
./castxml.sh behave/src/behave/behaveRun.h
#+END_SRC

**** With Conda/pip
#+BEGIN_SRC bash
./castxml.py behave/src/behave/behaveRun.h
#+END_SRC

** Convert CastXML to simple XML format

CastXML makes heavy use of references (e.g. ~<Class id="_9" name="MyClass" members="_12 _34" ...>~),
which can make it difficult to quickly tease out the classes, methods
and arguments.

To transform this using ~xform.xslt~, you can use [[https://www.npmjs.com/package/xslt3][xslt3]] (via NPM):

#+BEGIN_SRC bash
  npm install -g xslt3

  xslt3 -xsl:xform.xsl -s:behave.xml -o:behave-simple.xml
#+END_SRC

** Convert XML to [[https://fno.io/][Function Ontology]]

TBD (Probably using [[https://rml.io/yarrrml/tutorial/getting-started/][YARRRML]])

*** Adding Docs

- [[https://www.doxygen.nl/manual/output.html][Doxygen XML Output]]
- [[https://www.doxygen.nl/manual/commands.html][Doxygen Commands]]
